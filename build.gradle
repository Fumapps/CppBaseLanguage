ext.mpsVersion = "2024.1"
ext.mpsPlugins = [ ]
ext.customMpsPlugins = [
    "TextGenGen-Fum": "https://github.com/Fumapps/textGenGen/releases/download/2024.1-beta1/TextGenGen.zip"
]
ext.languageName = "CppBaseLanguage"

apply from: 'gradle/init-gradle-scripts.gradle'

task prepareMps {
    group 'mps'
    dependsOn 'buildOsSpecificBundle'
}

task mpsBuild {
    group 'mps'
    dependsOn 'mpsAntGenerate', 'mpsAntBuild'
}

task mpsClean {
    group 'mps'
    dependsOn 'mpsAntClean', 'mpsAntCleanSources'
}

task mpsTest {
    group 'mps'
    dependsOn 'mpsAntCheck', 'parseTestReportAfterAntCheck'
}

task openProjectInMps {
    group 'mps'
    dependsOn 'mpsOpenProjectInMpsForCurrentOs'
}

task buildAndOpenProjectInMps {
    group 'mps'
    dependsOn mpsBuild, openProjectInMps
}

/**
 * Checks if the manually adjustment to the file TextGens is made after running TextGenGen.
 * It has to be:
 file path: (node)->string {
   node.getFilePath();
 }
 */
task checkCppFolderGeneration {
    group 'mps'

    doLast {
        def textGenSourceDescriptorCode = file("languages/CppBaseLanguage/source_gen/CppBaseLanguage/textGen/TextGenAspectDescriptor.java").text

        ["CppHeaderFile", "CppSourceFile", "CppHeaderSourceFile"].each {
            boolean getPathExists = textGenSourceDescriptorCode.contains("getPath_$it")
            println("getPath_$it method is generated: $getPathExists")
            if (!getPathExists) {
                throw new GradleException("getPath_$it method is not generated in TextGenAspectDescriptor.java, ensure to manually add it after running TextGenGen")
            }
        }
    }
}
